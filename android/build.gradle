buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["AppYarnPackage_kotlinVersion"]

  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:7.2.1"
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

def reactNativeArchitectures() {
  def value = rootProject.getProperties().get("reactNativeArchitectures")
  return value ? value.split(",") : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["AppYarnPackage_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["AppYarnPackage_" + name]).toInteger()
}

def supportsNamespace() {
  def parsed = com.android.Version.ANDROID_GRADLE_PLUGIN_VERSION.tokenize('.')
  def major = parsed[0].toInteger()
  def minor = parsed[1].toInteger()

  // Namespace support was added in 7.3.0
  return (major == 7 && minor >= 3) || major >= 8
}

android {
  if (supportsNamespace()) {
    namespace "com.demoproject"

    sourceSets {
      main {
        manifest.srcFile "src/main/AndroidManifestNew.xml"
      }
    }
  }

  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")

  }

  buildTypes {
    release {
      minifyEnabled false
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

repositories {
  mavenCentral()
  google()
}

def kotlin_version = getExtOrDefault("kotlinVersion")

dependencies {
  // For < 0.71, this will be from the local maven repo
  // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
  //noinspection GradleDynamicVersion
  implementation "com.facebook.react:react-native:+"
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

  implementation files('../example/android/libs/fingerprint-1.9.6.aar')
  implementation files('../example/android/libs/spaysdk-2.2.6.aar')

  //libs transitive dependencies implementation
  implementation("io.github.sid-sdk:SIDSDK:1.0.2")
  implementation 'com.google.dagger:dagger:2.44'
  implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
  implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.1'
  implementation 'com.dynatrace.agent:agent-android:8.257.1.1007'


  //OkHttp
  implementation 'com.squareup.okhttp3:okhttp:4.10.0'
  implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'

  //Retrofit
  implementation 'com.squareup.retrofit2:retrofit:2.9.0'
  implementation 'com.squareup.retrofit2:converter-gson:2.3.0'


  // Timber
  def timber_version = '5.0.1'

  implementation "com.jakewharton.timber:timber:$timber_version"

  // Three Ten BP
  def threetenbp_version = '1.2.1'
  def threetenabp_version = '1.2.0'

  implementation "com.jakewharton.threetenabp:threetenabp:$threetenbp_version"
  testImplementation("org.threeten:threetenbp:${threetenbp_version}") {
    exclude module: "com.jakewharton.threetenabp:threetenabp:${threetenabp_version}"
  }

  //coil
  implementation("io.coil-kt:coil-base:2.4.0")
  implementation("io.coil-kt:coil-svg:2.4.0")

  //shimmer
  implementation 'com.facebook.shimmer:shimmer:0.5.0'

  // Firebase Database
  def firebase_database_version = '20.2.0'

  implementation "com.google.firebase:firebase-database-ktx:$firebase_database_version"

  def biometric_version = '1.1.0'
  implementation "androidx.biometric:biometric:$biometric_version"

  //Encrypted Shared Preferences
  def encrypted_shared_preferences_version = '1.1.0-alpha06'
  implementation "androidx.security:security-crypto:$encrypted_shared_preferences_version"

  implementation 'androidx.appcompat:appcompat:1.2.0'
  implementation 'com.google.android.material:material:1.8.0'

  // Lottie
  implementation 'com.airbnb.android:lottie:6.2.0'
}

